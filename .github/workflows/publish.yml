name: Publish to PyPI

on:
  # Trigger manuale (mantieni quello esistente)
  workflow_dispatch:
    inputs:
      target:
        description: 'Where to publish'
        required: true
        default: 'testpypi'
        type: choice
        options:
        - testpypi
        - pypi
      version_tag:
        description: 'Git tag to publish (e.g., v0.1.1)'
        required: true
        type: string

  # NUOVO: Trigger automatico per release
  release:
    types: [published]

jobs:
  # Job manuale (mantieni quello esistente)
  manual-publish:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout specific tag
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.version_tag }}
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Confirm target
      run: |
        echo "üéØ Publishing to: ${{ github.event.inputs.target }}"
        echo "üè∑Ô∏è Using tag: ${{ github.event.inputs.version_tag }}"
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine wheel
        
    - name: Build package
      run: |
        python -m build
        
    - name: Check package
      run: |
        python -m twine check dist/*
        
    - name: Publish to TestPyPI
      if: github.event.inputs.target == 'testpypi'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        skip-existing: true
        
    - name: Publish to PyPI (PRODUCTION)
      if: github.event.inputs.target == 'pypi'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

  # NUOVO: Job automatico per release
  auto-publish:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout release tag
      uses: actions/checkout@v4
      with:
        ref: ${{ github.ref }}
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Show release info
      run: |
        echo "üöÄ Auto-publishing release: ${{ github.event.release.tag_name }}"
        echo "üìã Release name: ${{ github.event.release.name }}"
        echo "üìù Release body: ${{ github.event.release.body }}"
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine wheel
        
    - name: Build package
      run: |
        python -m build
        
    - name: Check package
      run: |
        python -m twine check dist/*
        
    - name: Publish to PyPI (PRODUCTION)
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        
    - name: Success notification
      run: |
        echo "‚úÖ s3dgraphy ${{ github.event.release.tag_name }} published to PyPI!"
        echo "üì• Install with: pip install s3dgraphy"
        echo "üì• Specific version: pip install s3dgraphy==$(echo ${{ github.event.release.tag_name }} | sed 's/v//')"